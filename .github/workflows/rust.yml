name: Generic build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  RUST_TEST_LOG: debug

jobs:
  build:
    runs-on: ubuntu-latest

    # test 1.79 because this is the rust version in RHEL 8
    strategy:
      matrix:
        toolchain: [ "stable", "nightly", "1.79" ]

    steps:
    - uses: actions/checkout@v3

    - name: install extra packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: lighttpd

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true

    - name: Prepare
      shell: bash
      env:
        CI_TOOLCHAIN: ${{ matrix.toolchain }}
      run: |
        rm -f .local.mk Cargo.lock Cargo.toml .cargo/config
        printf 'RUST%s_COMPAT = t' "${CI_TOOLCHAIN//./}" > .local.mk
        make update-compat

    - name: Run build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: "--all-targets --locked --tests --benches --workspace --release"

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test

    - name: Upload Cargo.lock
      uses: actions/upload-artifact@v3
      with:
        name: Cargo.lock
        path: Cargo.lock
